--- # Add packages that I use on my Fedora workstation, requires the installation of ansible and starting of openssh-server before it can actually be run
- name: "Local configuration with ansible"
  hosts: 127.0.0.1
  connection: local
  become: yes
  tasks:
  - name: Setup to install third party repos
    dnf:
      name:
        - fedora-workstation-repositories
      state: present
  - name: check if google-chrome repo is enabled
    shell:
      cmd: dnf -C repolist enabled -v  | grep '^Repo-id' | awk '$3 == "google-chrome" {print "enabled"}'
      warn: no
    check_mode: no
    changed_when: false
    register: repo_google_chrome_enabled
  - name: enable google-chrome repo
    command: 
      cmd: dnf config-manager --enable google-chrome
      warn: no
    when: repo_google_chrome_enabled.stdout == ''
  - name: enable google-chrome repo and install Google Chrome
    dnf:
      #      enablerepo: google-chrome
      name:
       - google-chrome-stable
      state: present
    # rpmfusion-nonfree-nvidia-driver.repo
  - name: enable rpmfusion-nonfree-nvidia-driver repo
    shell:
      cmd: dnf -C repolist enabled -v  | grep '^Repo-id' | awk '$3 == "rpmfusion-nonfree-nvidia-driver" {print "enabled"}'
      warn: no
    check_mode: no
    changed_when: false
    register: repo_rpmfusion_nonfree_nvidia_driver_enabled
  - name: enable rpmfusion-nonfree-nvidia-driver repo
    command: 
      cmd: dnf config-manager --enable rpmfusion-nonfree-nvidia-driver
      warn: no
    when: repo_rpmfusion_nonfree_nvidia_driver_enabled.stdout == ''
  - name: enable rpmfusion-nonfree-steam repo
    shell:
      cmd: dnf -C repolist enabled -v  | grep '^Repo-id' | awk '$3 == "rpmfusion-nonfree-steam" {print "enabled"}'
      warn: no
    check_mode: no
    changed_when: false
    register: repo_rpmfusion_nonfree_steam_enabled
  - name: enable rpmfusion-nonfree-steam and install Steam
    dnf:
      enablerepo: rpmfusion-nonfree-steam
      name:
        - steam
      state: present
  - name: Import rpmfushion gpg key from distribution-gpg-keys package
    rpm_key:
      state: present
      key: "/usr/share/distribution-gpg-keys/rpmfusion/RPM-GPG-KEY-rpmfusion-free-fedora-{{ ansible_distribution_major_version }}"
  - name: Enable rpmfushion-free repo
    dnf:
      name: "https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
      state: present
  - name: "Enable fedora-cisco-openh264 for totem"
    dnf:
      enablerepo: fedora-cisco-openh264
      name:
        - gstreamer1-plugin-openh264
        - mozilla-openh264
      state: present
  - name: "install software development tools"
    dnf:
      name:
        - vim-enhanced
        - git
        - icedtea-web
        - java-1.8.0-openjdk-headless
        - java-1.8.0-openjdk
        - java-1.8.0-openjdk-devel
        - kernel-devel
      state: present
  - name: "Install usability tools"
    dnf:
      name: 
        - gnome-tweaks
  - name: "install graphics tools"
    dnf:
      name:
        - krita
        # - blender
        - gimp
        - inkscape
        - avidemux
        - rapid-photo-downloader
        - hplip-gui
          # unmaintained        - jp2a
        - asciio
        - photocollage
        - ImageMagick
        - GraphicsMagick
        - openshot
      state: present
  - name: "install nvidia driver from rpmfusion"
    dnf:
      name:
        - akmod-nvidia
      state: present
  - name: "install audio applications"
    dnf:
      name:
        - audacity
        - hydrogen
        - soundkonverter
        - pavucontrol
        - pithos
      state: present
  - name: "install pulseaudio-module-bluetooth-freeworld for aptx support (Ansible < 2.10)"
    command: 
      cmd: "dnf install -y pulseaudio-module-bluetooth-freeworld --allowerasing"
      warn: no
    when: ansible_version.full is version('2.10.0', '<') 
  - name: "install pulseaudio-module-bluetooth-freeworld for aptx support (Ansible >= 2.10)"
    dnf:
      name: pulseaudio-module-bluetooth-freeworld
      state: present
      allowerasing: yes
    when: ansible_version.full is version('2.10.0', '>=') 
  - name: "install sysadmin tools"
    dnf:
      name:
        - x2goclient
        - remmina
        - seahorse
        - perl-YUM-RepoQuery
        - etckeeper-dnf
        - virt-manager
        - snapd
        - xrdp
        - openconnect
        - nmap
        - NetworkManager-openconnect-gnome
        - pyhoca-gui
        - pyhoca-cli
        - wireshark
        - inxi
        - apg
        - rpmconf
        - nfs4-acl-tools
        - sysstat
        - smem
        - exfat-utils
        - fuse-exfat
        - hdparm
        - fio
        - meld
        - smartmontools
        - fdupes
        - lshw
        - python3-ansible-lint
        - ansible
      state: present
  - name: "Create /snap symlink on Fedora to allow classic confinement snaps to install"
    file:
      src: /var/lib/snapd/snap
      dest: /snap
      state: link
    when: ansible_distribution == 'Fedora'

  - name: "install blender via snap package"
    snap:
      name: blender
      state: present
      channel: stable
      classic: yes
  - name: "install backup applications"
    dnf:
      name: restic
      state: present
  - name: "packages needed to watch LinuxAcademy videos in Firefox."
    dnf:
      name: ffmpeg-libs
      state: present
  - name: "packages needed to watch SchedMD Slurm videos"
    dnf:
      name: schroedinger
      state: present
  - name: "install packages for office and desktop publishing"
    dnf:
      name: scribus
      state: present
  - name: "install security tools"
    dnf:
      name: 'https://spideroak.com/dist/encryptr/signed/linux/rpm/encryptr-2.0.0-1.x86_64.rpm'
      state: present
      disable_gpg_check: yes
  - name: "install communications tools - no gpg check"
    dnf:
      name:
        - 'https://downloads.slack-edge.com/linux_releases/slack-4.12.0-0.1.fc21.x86_64.rpm'
        - 'https://packages.microsoft.com/yumrepos/ms-teams/teams-1.3.00.16851-1.x86_64.rpm'
      state: present
      disable_gpg_check: yes
  - name: "install communications tools"
    dnf:
      name:
        - telegram-desktop
        - hexchat
      state: present
      #    snap:
      # name:
      #   - slack
      # state: present
  - name: "install multimedia processing packages"
    dnf:
      name:
        - HandBrake-gui
        - youtube-dl
          #        - 'https://dl.google.com/linux/direct/google-musicmanager-beta_current_x86_64.rpm'
        - obs-studio
      state: present
  - name: "install additional browsers"
    dnf:
      name:
        # - chromium
        # - chromium-libs-media-freeworld
        - chromium-freeworld
      state: present
